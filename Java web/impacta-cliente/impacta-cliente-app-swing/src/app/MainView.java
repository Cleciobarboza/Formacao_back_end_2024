/*
 * MainView.java
 */

package app;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseListener;
import java.util.Collection;

import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JPopupMenu;
import javax.swing.Timer;

import org.jdesktop.application.Action;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.TaskMonitor;

import app.component.MunicipioJPopupMenu;
import app.component.MunicipioTableModel;
import app.component.UFComboBoxModel;
import app.controller.municipio.MunicipioCancelarAction;
import app.controller.municipio.MunicipioEscolherUfAction;
import app.controller.municipio.MunicipioMouseAdapter;
import app.controller.municipio.MunicipioOkAction;
import facade.MunicipioFacade;

/**
 * The application's main frame.
 */
public class MainView extends FrameView {

    private MunicipioFacade municipioFacade;

    public MainView(SingleFrameApplication app) {
        super(app);

        initComponents();

        // Facades
        initFacadeMunicipio();

        // Views
        initViewMunicipio();

        // Popups
        initPopupMunicipio();

        // Controllers
        initControllerMunicipio();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                getStatusMessageLabel().setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (getBusyIconIndex() + 1) % getBusyIcons().length;
                getStatusAnimationLabel().setIcon(getBusyIcons()[getBusyIconIndex()]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        getStatusAnimationLabel().setIcon(getBusyIcons()[0]);
                        busyIconIndex = 0;
                        getBusyIconTimer().start();
                    }
                    getProgressBar().setVisible(true);
                    getProgressBar().setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    getBusyIconTimer().stop();
                    getStatusAnimationLabel().setIcon(getIdleIcon());
                    getProgressBar().setVisible(false);
                    getProgressBar().setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String) (evt.getNewValue());
                    getStatusMessageLabel().setText((text == null) ? "" : text);
                    getMessageTimer().restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer) (evt.getNewValue());
                    getProgressBar().setVisible(true);
                    getProgressBar().setIndeterminate(false);
                    getProgressBar().setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (getAboutBox() == null) {
            JFrame mainFrame = ImpactaSwing.getApplication().getMainFrame();
            aboutBox = new MainAboutBox(mainFrame);
            getAboutBox().setLocationRelativeTo(mainFrame);
        }
        ImpactaSwing.getApplication().show(getAboutBox());
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        mainjTabbedPane = new javax.swing.JTabbedPane();
        clientesjScrollPane = new javax.swing.JScrollPane();
        clientesjTable = new javax.swing.JTable();
        cadastrojTabbedPane = new javax.swing.JTabbedPane();
        clientejPanel = new javax.swing.JPanel();
        logradourojPanel = new javax.swing.JPanel();
        bairrojPanel = new javax.swing.JPanel();
        municipiojPanel = new javax.swing.JPanel();
        municipioUfjLabel = new javax.swing.JLabel();
        municipioUfjComboBox = new javax.swing.JComboBox<>();
        municpiojLabel = new javax.swing.JLabel();
        municipiojTextField = new javax.swing.JTextField();
        municipioOkjButton = new javax.swing.JButton();
        municipioCancelarjButton = new javax.swing.JButton();
        municipiosjScrollPane = new javax.swing.JScrollPane();
        municipiosjTable = new javax.swing.JTable();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        mainPanel.setName("mainPanel"); // NOI18N

        mainjTabbedPane.setName("mainjTabbedPane"); // NOI18N

        clientesjScrollPane.setName("clientesjScrollPane"); // NOI18N

        clientesjTable.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

        }, new String[] { "Cliente", "Endere√ßo", "E-Mail", "Telefone" }) {
            private static final long serialVersionUID = 8980005484180283287L;

            boolean[] canEdit = new boolean[] { false, false, true, false };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        clientesjTable.setName("clientesjTable"); // NOI18N
        clientesjScrollPane.setViewportView(clientesjTable);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application
                .getInstance(app.ImpactaSwing.class).getContext().getResourceMap(MainView.class);
        clientesjTable.getColumnModel().getColumn(0)
                .setHeaderValue(resourceMap.getString("clientesjTable.columnModel.title0")); // NOI18N
        clientesjTable.getColumnModel().getColumn(1)
                .setHeaderValue(resourceMap.getString("clientesjTable.columnModel.title1")); // NOI18N
        clientesjTable.getColumnModel().getColumn(2)
                .setHeaderValue(resourceMap.getString("clientesjTable.columnModel.title2")); // NOI18N
        clientesjTable.getColumnModel().getColumn(3)
                .setHeaderValue(resourceMap.getString("clientesjTable.columnModel.title3")); // NOI18N

        mainjTabbedPane.addTab(resourceMap.getString("clientesjScrollPane.TabConstraints.tabTitle"),
                clientesjScrollPane); // NOI18N

        cadastrojTabbedPane.setName("cadastrojTabbedPane"); // NOI18N

        clientejPanel.setName("clientejPanel"); // NOI18N

        javax.swing.GroupLayout clientejPanelLayout = new javax.swing.GroupLayout(clientejPanel);
        clientejPanel.setLayout(clientejPanelLayout);
        clientejPanelLayout.setHorizontalGroup(clientejPanelLayout.createParallelGroup(
                javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 390, Short.MAX_VALUE));
        clientejPanelLayout.setVerticalGroup(clientejPanelLayout.createParallelGroup(
                javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 216, Short.MAX_VALUE));

        cadastrojTabbedPane.addTab(resourceMap.getString("clientejPanel.TabConstraints.tabTitle"), clientejPanel); // NOI18N

        logradourojPanel.setName("logradourojPanel"); // NOI18N

        javax.swing.GroupLayout logradourojPanelLayout = new javax.swing.GroupLayout(logradourojPanel);
        logradourojPanel.setLayout(logradourojPanelLayout);
        logradourojPanelLayout.setHorizontalGroup(logradourojPanelLayout.createParallelGroup(
                javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 390, Short.MAX_VALUE));
        logradourojPanelLayout.setVerticalGroup(logradourojPanelLayout.createParallelGroup(
                javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 216, Short.MAX_VALUE));

        cadastrojTabbedPane.addTab(resourceMap.getString("logradourojPanel.TabConstraints.tabTitle"), logradourojPanel); // NOI18N

        bairrojPanel.setName("bairrojPanel"); // NOI18N

        javax.swing.GroupLayout bairrojPanelLayout = new javax.swing.GroupLayout(bairrojPanel);
        bairrojPanel.setLayout(bairrojPanelLayout);

        cadastrojTabbedPane.addTab(resourceMap.getString("bairrojPanel.TabConstraints.tabTitle"), bairrojPanel); // NOI18N

        municipiojPanel.setName("municipiojPanel"); // NOI18N

        municipioUfjLabel.setText(resourceMap.getString("municipioUfjLabel.text")); // NOI18N
        municipioUfjLabel.setName("municipioUfjLabel"); // NOI18N

        municipioUfjComboBox.setName("municipioUfjComboBox"); // NOI18N

        municpiojLabel.setText(resourceMap.getString("municpiojLabel.text")); // NOI18N
        municpiojLabel.setName("municpiojLabel"); // NOI18N

        municipiojTextField.setText(resourceMap.getString("municipiojTextField.text")); // NOI18N
        municipiojTextField.setName("municipiojTextField"); // NOI18N

        municipioOkjButton.setText(resourceMap.getString("municipioOkjButton.text")); // NOI18N
        municipioOkjButton.setName("municipioOkjButton"); // NOI18N

        municipioCancelarjButton.setText(resourceMap.getString("municipioCancelarjButton.text")); // NOI18N
        municipioCancelarjButton.setName("municipioCancelarjButton"); // NOI18N

        municipiosjScrollPane.setName("municipiosjScrollPane"); // NOI18N

        municipiosjTable.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

        }, new String[] { "Munic√≠pio", "UF" }) {
            /**
             * 
             */
            private static final long serialVersionUID = -2580777840394500340L;
            boolean[] canEdit = new boolean[] { false, false };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        municipiosjTable.setName("municipiosjTable"); // NOI18N
        municipiosjScrollPane.setViewportView(municipiosjTable);
        municipiosjTable.getColumnModel().getColumn(0)
                .setHeaderValue(resourceMap.getString("municipiosjTable.columnModel.title0")); // NOI18N
        municipiosjTable.getColumnModel().getColumn(1)
                .setHeaderValue(resourceMap.getString("municipiosjTable.columnModel.title1")); // NOI18N

        javax.swing.GroupLayout municipiojPanelLayout = new javax.swing.GroupLayout(municipiojPanel);
        municipiojPanel.setLayout(municipiojPanelLayout);
        municipiojPanelLayout
                .setHorizontalGroup(municipiojPanelLayout
                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(
                                municipiojPanelLayout
                                        .createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(
                                                municipiojPanelLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(
                                                                javax.swing.GroupLayout.Alignment.TRAILING,
                                                                municipiojPanelLayout
                                                                        .createSequentialGroup()
                                                                        .addComponent(municipioOkjButton)
                                                                        .addPreferredGap(
                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(municipioCancelarjButton))
                                                        .addGroup(
                                                                municipiojPanelLayout
                                                                        .createSequentialGroup()
                                                                        .addComponent(municipioUfjLabel)
                                                                        .addPreferredGap(
                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(municipioUfjComboBox,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                85,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(
                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(municpiojLabel)
                                                                        .addPreferredGap(
                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(municipiojTextField,
                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                209, Short.MAX_VALUE)))
                                        .addContainerGap())
                        .addComponent(municipiosjScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE));
        municipiojPanelLayout.setVerticalGroup(municipiojPanelLayout.createParallelGroup(
                javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(
                        municipiojPanelLayout
                                .createSequentialGroup()
                                .addContainerGap()
                                .addGroup(
                                        municipiojPanelLayout
                                                .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(municipioUfjLabel)
                                                .addComponent(municipioUfjComboBox,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(municpiojLabel)
                                                .addComponent(municipiojTextField,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(
                                        municipiojPanelLayout
                                                .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(municipioOkjButton)
                                                .addComponent(municipioCancelarjButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(municipiosjScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 148,
                                        Short.MAX_VALUE)));

        cadastrojTabbedPane.addTab(resourceMap.getString("municipiojPanel.TabConstraints.tabTitle"), municipiojPanel); // NOI18N

        mainjTabbedPane.addTab(resourceMap.getString("cadastrojTabbedPane.TabConstraints.tabTitle"),
                cadastrojTabbedPane); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(mainPanelLayout.createParallelGroup(
                javax.swing.GroupLayout.Alignment.LEADING).addComponent(mainjTabbedPane,
                javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE));
        mainPanelLayout.setVerticalGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(mainjTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE));

        menuBar.setAutoscrolls(true);
        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application
                .getInstance(app.ImpactaSwing.class).getContext().getActionMap(MainView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setText(resourceMap.getString("exitMenuItem.text")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setText(resourceMap.getString("aboutMenuItem.text")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(statusPanelLayout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                .addGroup(
                        statusPanelLayout
                                .createSequentialGroup()
                                .addContainerGap()
                                .addComponent(statusMessageLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 226,
                                        Short.MAX_VALUE)
                                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(statusAnimationLabel).addContainerGap()));
        statusPanelLayout.setVerticalGroup(statusPanelLayout.createParallelGroup(
                javax.swing.GroupLayout.Alignment.LEADING).addGroup(
                statusPanelLayout
                        .createSequentialGroup()
                        .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(
                                statusPanelLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(statusMessageLabel)
                                        .addComponent(statusAnimationLabel)
                                        .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(3, 3, 3)));

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bairrojPanel;
    private javax.swing.JTabbedPane cadastrojTabbedPane;
    private javax.swing.JPanel clientejPanel;
    private javax.swing.JScrollPane clientesjScrollPane;
    private javax.swing.JTable clientesjTable;
    private javax.swing.JPanel logradourojPanel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTabbedPane mainjTabbedPane;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton municipioCancelarjButton;
    private javax.swing.JButton municipioOkjButton;
    private javax.swing.JComboBox<Object> municipioUfjComboBox;
    private javax.swing.JLabel municipioUfjLabel;
    private javax.swing.JPanel municipiojPanel;
    private javax.swing.JTextField municipiojTextField;
    private javax.swing.JScrollPane municipiosjScrollPane;
    private javax.swing.JTable municipiosjTable;
    private javax.swing.JLabel municpiojLabel;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;

    public javax.swing.JPanel getBairrojPanel() {
        return bairrojPanel;
    }

    public javax.swing.JTabbedPane getCadastrojTabbedPane() {
        return cadastrojTabbedPane;
    }

    public javax.swing.JPanel getClientejPanel() {
        return clientejPanel;
    }

    public javax.swing.JScrollPane getClientesjScrollPane() {
        return clientesjScrollPane;
    }

    public javax.swing.JTable getClientesjTable() {
        return clientesjTable;
    }

    public javax.swing.JPanel getLogradourojPanel() {
        return logradourojPanel;
    }

    public javax.swing.JPanel getMainPanel() {
        return mainPanel;
    }

    public javax.swing.JTabbedPane getMainjTabbedPane() {
        return mainjTabbedPane;
    }

    @Override
    public javax.swing.JMenuBar getMenuBar() {
        return menuBar;
    }

    public javax.swing.JButton getMunicipioCancelarjButton() {
        return municipioCancelarjButton;
    }

    public javax.swing.JComboBox<?> getMunicipioUfjComboBox() {
        return municipioUfjComboBox;
    }

    public javax.swing.JLabel getMunicipioUfjLabel() {
        return municipioUfjLabel;
    }

    public javax.swing.JPanel getMunicipiojPanel() {
        return municipiojPanel;
    }

    public javax.swing.JTextField getMunicipiojTextField() {
        return municipiojTextField;
    }

    public javax.swing.JScrollPane getMunicipiosjScrollPane() {
        return municipiosjScrollPane;
    }

    public javax.swing.JTable getMunicipiosjTable() {
        return municipiosjTable;
    }

    public javax.swing.JButton getMunicpioOkjButton() {
        return municipioOkjButton;
    }

    public javax.swing.JLabel getMunicpiojLabel() {
        return municpiojLabel;
    }

    public javax.swing.JProgressBar getProgressBar() {
        return progressBar;
    }

    public javax.swing.JLabel getStatusAnimationLabel() {
        return statusAnimationLabel;
    }

    public javax.swing.JLabel getStatusMessageLabel() {
        return statusMessageLabel;
    }

    public javax.swing.JPanel getStatusPanel() {
        return statusPanel;
    }

    public Timer getMessageTimer() {
        return messageTimer;
    }

    public Timer getBusyIconTimer() {
        return busyIconTimer;
    }

    public Icon getIdleIcon() {
        return idleIcon;
    }

    public Icon[] getBusyIcons() {
        return busyIcons;
    }

    public int getBusyIconIndex() {
        return busyIconIndex;
    }

    public JDialog getAboutBox() {
        return aboutBox;
    }

    public MunicipioFacade getMunicipioFacade() {
        return municipioFacade;
    }

    private void initFacadeMunicipio() {
        try {
            municipioFacade = new MunicipioFacade("/sources");
        } catch (Exception cause) {
            cause.printStackTrace();
        }
    }

    private void initPopupMunicipio() {
        MouseListener mouse;
        JPopupMenu menu;

        menu = new MunicipioJPopupMenu(this);
        mouse = new MunicipioMouseAdapter(menu);

        municipiosjTable.addMouseListener(mouse);
    }

    private void initControllerMunicipio() {
        municipioOkjButton.addActionListener(new MunicipioOkAction(this));
        municipioUfjComboBox.addActionListener(new MunicipioEscolherUfAction(this));
        municipioCancelarjButton.addActionListener(new MunicipioCancelarAction(this));
    }

    private void initViewMunicipio() {
        municipioUfjComboBox.setModel(new UFComboBoxModel());
    }

    public void carregarMunicipios() throws Exception {
        Collection<?> domains;
        Object uf;

        uf = municipioUfjComboBox.getSelectedItem();
        domains = municipioFacade.listar(uf.toString());

        municipiosjTable.setModel(new MunicipioTableModel(domains));
        municipiosjTable.updateUI();

        String msg;
        int total = domains.size();

        if (total == 0) {
            msg = "Nenhum munic√≠pio encontrado!";
        } else {
            msg = String.format("Carregados %02d munic√≠pio(s).", domains.size());
        }

        statusMessageLabel.setText(msg);
        municipiojTextField.requestFocus();
    }

    /*
     * private void initViewBairro() { bairroUfjComboBox.setModel(new DefaultComboBoxModel(UFVO.values())); }
     */

    private Object municipioAAlterar;

    public void setMunicipioAAlterar(Object municipio) {
        this.municipioAAlterar = municipio;
    }

    public Object getMunicipioAAlterar() {
        return municipioAAlterar;
    }

    public void limparMunicipio() {
        municipiosjTable.clearSelection();
        municipiojTextField.setText(null);
        municipiojTextField.requestFocus();
        setMunicipioAAlterar(null);
    }
}
